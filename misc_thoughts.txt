fringe/extensions
-return to prog-extraction by berghofer?
-lattice of all stable matchings, and how gs always return a particular one in the lattice. see wikipedia 'optimality of the solution'
-split GS.thy into multiple files???

do
-prove the lemma that engagements!m=Some w IFF findFiance w engagements = Some m (given is_distinct fst(seq!0)). and make use of this lemma where possible
-keep lines in .thy under the length limit by breaking
-also add spaces (paragraph gaps) wherever reasonable to improve readability
-use [OF _] where possible 
-use try0 everywhere to shorten/speedup proofs
-unify gs'-arg-seq to all use index form
-remove unnecessary uses of ?seq eg where they are only used in `seq=?seq`
-replace all instances of seq!i=(X,Y) with fst(seq!i) snd(seq!i)
	actually no, on second thought, why dont I instead use X,Y everywhere? in the statement of lemmas too. change all fst(seq!i) (snd(seq!i) TO XY?
-organize using <sections> functionality
	alternatively, at least reorder contents in my .thy into something organized and reasonable
-eventually: remove unused lemmas
-a stable match is: counter example doesnt exist (no instability) + actually is a match (everyone gets married) (no one is married to 2 diff people) (ie a bijection)
-run codegen for evaluation purposes?
-submit to afp
